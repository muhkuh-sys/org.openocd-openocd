diff -uNr org/src/helper/command.c new/src/helper/command.c
--- org/src/helper/command.c	2015-04-24 15:09:54 +0000
+++ new/src/helper/command.c	2016-09-22 16:18:53 +0000
@@ -511,14 +511,12 @@
 
 	string = alloc_vprintf(format, ap);
 	if (string != NULL) {
-		/* we want this collected in the log + we also want to pick it up as a tcl return
-		 * value.
-		 *
-		 * The latter bit isn't precisely neat, but will do for now.
-		 */
-		LOG_USER_N("%s", string);
-		/* We already printed it above
-		 * command_output_text(context, string); */
+		/* If an output handler has been set, print via the handler. Otherwise, print via LOG_USER_N. */
+		if (context && context->output_handler) {
+			context->output_handler(context, string);
+		} else {
+			LOG_USER_N("%s", string);
+		}
 		free(string);
 	}
 
@@ -535,15 +533,13 @@
 	string = alloc_vprintf(format, ap);
 	if (string != NULL) {
 		strcat(string, "\n");	/* alloc_vprintf guaranteed the buffer to be at least one
-					 *char longer */
-		/* we want this collected in the log + we also want to pick it up as a tcl return
-		 * value.
-		 *
-		 * The latter bit isn't precisely neat, but will do for now.
-		 */
-		LOG_USER_N("%s", string);
-		/* We already printed it above
-		 * command_output_text(context, string); */
+					 * char longer */
+		/* If an output handler has been set, print via the handler. Otherwise, print via LOG_USER_N. */
+		if (context && context->output_handler) {
+			context->output_handler(context, string);
+		} else {
+			LOG_USER_N("%s", string);
+		}
 		free(string);
 	}
 
@@ -717,6 +712,13 @@
 	context->output_handler = output_handler;
 	context->output_handler_priv = priv;
 }
+
+void command_clear_output_handler(struct command_context *context)
+{
+	context->output_handler = NULL;
+	context->output_handler_priv = NULL;
+}
+
 
 struct command_context *copy_command_context(struct command_context *context)
 {
diff -uNr org/src/helper/command.h new/src/helper/command.h
--- org/src/helper/command.h	2015-04-24 15:09:54 +0000
+++ new/src/helper/command.h	2016-09-22 16:21:06 +0000
@@ -294,6 +294,7 @@
 void command_set_output_handler(struct command_context *context,
 		command_output_handler_t output_handler, void *priv);
 
+void command_clear_output_handler(struct command_context *context);
 
 int command_context_mode(struct command_context *context, enum command_mode mode);
 

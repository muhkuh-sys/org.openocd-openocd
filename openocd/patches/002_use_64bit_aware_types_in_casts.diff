diff -uNr org/jimtcl/jim-exec.c new/jimtcl/jim-exec.c
--- org/jimtcl/jim-exec.c	2015-04-24 17:11:32.000000000 +0200
+++ new/jimtcl/jim-exec.c	2016-03-29 10:15:22.000000000 +0200
@@ -20,7 +20,8 @@
  * express or implied warranty.
  */
 
 #define _GNU_SOURCE
+#include <stddef.h>
 #include <string.h>
 #include <ctype.h>
 
@@ -325,6 +326,6 @@
     if (WIFEXITED(waitStatus)) {
         Jim_ListAppendElement(interp, errorCode, Jim_NewStringObj(interp, "CHILDSTATUS", -1));
-        Jim_ListAppendElement(interp, errorCode, Jim_NewIntObj(interp, (long)pid));
+        Jim_ListAppendElement(interp, errorCode, Jim_NewIntObj(interp, (ptrdiff_t)pid));
         Jim_ListAppendElement(interp, errorCode, Jim_NewIntObj(interp, WEXITSTATUS(waitStatus)));
     }
     else {
@@ -350,7 +351,7 @@
         }

-        Jim_ListAppendElement(interp, errorCode, Jim_NewIntObj(interp, (long)pid));
+        Jim_ListAppendElement(interp, errorCode, Jim_NewIntObj(interp, (ptrdiff_t)pid));
         Jim_ListAppendElement(interp, errorCode, Jim_NewStringObj(interp, Jim_SignalId(WTERMSIG(waitStatus)), -1));
         Jim_ListAppendElement(interp, errorCode, Jim_NewStringObj(interp, Jim_SignalName(WTERMSIG(waitStatus)), -1));
     }
     Jim_SetGlobalVariableStr(interp, "errorCode", errorCode);
@@ -435,9 +436,9 @@
         listObj = Jim_NewListObj(interp, NULL, 0);
         for (i = 0; i < numPids; i++) {
-            Jim_ListAppendElement(interp, listObj, Jim_NewIntObj(interp, (long)pidPtr[i]));
+            Jim_ListAppendElement(interp, listObj, Jim_NewIntObj(interp, (ptrdiff_t)pidPtr[i]));
         }
         Jim_SetResult(interp, listObj);
         JimDetachPids(interp, numPids, pidPtr);
         Jim_Free(pidPtr);
         return JIM_OK;
     }
@@ -1313,7 +1314,7 @@
 static FILE *JimFdOpenForRead(fdtype fd)
 {
-    return _fdopen(_open_osfhandle((int)fd, _O_RDONLY | _O_TEXT), "r");
+    return _fdopen(_open_osfhandle((intptr_t)fd, _O_RDONLY | _O_TEXT), "r");
 }

 static fdtype JimFileno(FILE *fh)
 { 
@@ -1338,7 +1339,7 @@
 
 static FILE *JimFdOpenForWrite(fdtype fd)
 {
-    return _fdopen(_open_osfhandle((int)fd, _O_TEXT), "w");
+    return _fdopen(_open_osfhandle((intptr_t)fd, _O_TEXT), "w");
 }
 
 static pidtype JimWaitPid(pidtype pid, int *status, int nohang)
